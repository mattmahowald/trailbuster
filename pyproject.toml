[project]
name = "trailbuster"
version = "0.1.0"
description = "Bust trailhead"
authors = [
    {name = "Matt Mahowald",email = "mahowaldmatt@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pytest-playwright (>=0.7.0,<0.8.0)",
    "playwright (>=1.40.0,<2.0.0)",
    "python-dotenv (>=1.0.0,<2.0.0)",
    "google-api-python-client (>=2.177.0,<3.0.0)",
    "google-auth-httplib2 (>=0.2.0,<0.3.0)",
    "google-auth-oauthlib (>=1.2.2,<2.0.0)"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
    "pdoc>=14.0.0",
    "py-spy>=0.3.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
]

[tool.poetry]
name = "trailbuster"
version = "0.1.0"
description = "Bust trailhead"
authors = ["Matt Mahowald <mahowaldmatt@gmail.com>"]
readme = "README.md"
packages = [
    {include = "salesforce"},
]

[tool.poetry.dependencies]
python = "^3.11"
pytest-playwright = "^0.7.0"
playwright = "^1.40.0"
python-dotenv = "^1.0.0"
google-api-python-client = "^2.177.0"
google-auth-httplib2 = "^0.2.0"
google-auth-oauthlib = "^1.2.2"
colorama = "^0.4.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
black = "^23.0.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.5.0"
ruff = "^0.1.0"
pre-commit = "^3.5.0"
pdoc = "^14.0.0"
py-spy = "^0.3.0"
types-requests = "^2.31.0"
types-PyYAML = "^6.0.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".git", "build", "dist", ".venv", ".mypy_cache"]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
ignore_missing_imports = true

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "network: Tests that require network access",
]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
